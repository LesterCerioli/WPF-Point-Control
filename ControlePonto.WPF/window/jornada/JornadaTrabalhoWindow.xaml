<base:WindowBase x:Class="ControlePonto.WPF.window.jornada.JornadaTrabalhoWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:base="clr-namespace:ControlePonto.WPF.window"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:frmwrk="clr-namespace:ControlePonto.WPF.framework"
                 xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
                 Title="Jornada de Trabalho"
                 SizeToContent="WidthAndHeight">
    
    <Window.Resources>
        <sys:String x:Key="strEntrada">Horário de entrada</sys:String>
        <sys:String x:Key="strSaida">Horário de saída</sys:String>
        <sys:String x:Key="strFolga">Qt. horas de folga</sys:String>
        <sys:String x:Key="strSalvar">Salvar</sys:String>
        <sys:String x:Key="strFechar">Fechar</sys:String>
        <sys:String x:Key="strCheckTrabalho">Dia de trabalho</sys:String>
        <sys:String x:Key="strDicaFolga">Quantidade de horas a serem descontados da jornada. Se houver apenas horário de almoço, preencher com 01:00.</sys:String>
        
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="10, 10, 10, 5" />
        </Style>
        
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="4" />
        </Style>
        
        <Style TargetType="toolkit:TimeSpanUpDown">
            <Setter Property="Margin" Value="4,4,12,4" />
            <Setter Property="Minimum" Value="00:00" />
            <Setter Property="Maximum" Value="23:59" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                                <Grid DockPanel.Dock="Right"
                                      Width="12" 
                                      Height="12"
                                      Margin="2,0"                                      >
                                    <Ellipse Width="12" 
                                             Height="12" 
                                             Fill="Red" 
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center">
                                    </Ellipse>
                                    <TextBlock Foreground="White"
                                               FontWeight="Heavy" 
                                               FontSize="8" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center" 
                                               TextAlignment="Center"
                                               Text="X"
                                               ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                                </Grid>
                            <AdornedElementPlaceholder x:Name="ErrorAdorner" ></AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="6,4" />
        </Style>
    </Window.Resources>
    
    <Grid Margin="5"
          frmwrk:EnterKeyTraversal.IsEnabled="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ComboBox Grid.ColumnSpan="2"
                  ItemsSource="{Binding Dias}"                  
                  SelectedItem="{Binding DiaJornadaSelecionado}"
                  IsEnabled="{Binding PodeTrocarDia, UpdateSourceTrigger=PropertyChanged}">
            
            <ComboBox.ItemTemplate>
                <DataTemplate>                    
                    <TextBlock Text="{Binding NomeDiaSemana}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
            
        </ComboBox>

        <CheckBox Grid.Row="1"
                  Grid.Column="1"
                  Content="{StaticResource strCheckTrabalho}"
                  DataContext="{Binding DiaJornadaSelecionado, UpdateSourceTrigger=PropertyChanged}"
                  IsChecked="{Binding DiaDeTrabalho}"/>
        
        <Label Grid.Row="2" 
               Content="{StaticResource strEntrada}" />
        
        <Label Grid.Row="3"
               Content="{StaticResource strSaida}" />
        
        <Label Grid.Row="4"
               Content="{StaticResource strFolga}"
               ToolTip="{StaticResource strDicaFolga}"/>
        
        <toolkit:TimeSpanUpDown Grid.Row="2"
                                Grid.Column="1"
                                DataContext="{Binding DiaJornadaSelecionado, UpdateSourceTrigger=PropertyChanged}"
                                Value="{Binding Entrada, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsEnabled="{Binding DiaDeTrabalho, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>

        <toolkit:TimeSpanUpDown Grid.Row="3"
                                Grid.Column="1"
                                DataContext="{Binding DiaJornadaSelecionado, UpdateSourceTrigger=PropertyChanged}"
                                Value="{Binding Saida, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsEnabled="{Binding DiaDeTrabalho, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
        
        <toolkit:TimeSpanUpDown Grid.Row="4"
                                Grid.Column="1"
                                DataContext="{Binding DiaJornadaSelecionado, UpdateSourceTrigger=PropertyChanged}"
                                Value="{Binding Folga, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                IsEnabled="{Binding DiaDeTrabalho, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
        
        <Button Grid.Row="5"
                Content="{StaticResource strSalvar}"
                Command="{Binding SalvarCommand}"
                HorizontalAlignment="Right"/>
        
        <Button Grid.Row="5"
                Grid.Column="1"
                Content="{StaticResource strFechar}"
                Command="{Binding FecharCommand}"
                HorizontalAlignment="Left"/>

    </Grid>
    
</base:WindowBase>
